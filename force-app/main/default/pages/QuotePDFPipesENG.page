<apex:page showHeader="false" extensions="QuotePDF"
		standardcontroller="Quote" standardstylesheets="false" renderAs="pdf" 
           applybodytag="false" applyhtmltag="false" >
	<head>
        <style>
            @page {
                size: landscape;

                @top-center {
                    content: element(header);
                }
            }

            @page {
                @bottom-center {
                    content: element(footer);
                }
            }

            @page :left {
               
                margin: 140px 0 4.5cm 0;
            }
            @page :right {
             
                margin: 140px 0 4.5cm 0;
            }
            body {
                margin: 0 3cm 0 1.5cm;
                font-family: Arial Unicode MS, Calibri, Geneva, Arial, Helvetica, sans-serif;
                font-size: 12px;
            }
            .heading{
            	text-align: center;
            	font-weight: bold;
            	font-family: Arial Unicode MS Bold, Calibri, Geneva, Arial, Helvetica, sans-serif;
            	font-size: 20px;
            	/*text-decoration: underline;*/
            }

            div.footer {
                display: block;
                text-align: left;
                position: running(footer);
            }

            .footerheading {
                font-family: Helvetica, sans-serif;
                font-size: 18px;
                color: gray;
                margin-left: 95px;
            }
            .footertext {
                font-family: Geneva, sans-serif;
                font-size: 11px;
                color: gray;
                margin-left: 95px;
            }

            b {
            	font-weight: bold;
            	font-family: Arial Unicode MS Bold, Calibri, Geneva, Arial, Helvetica, sans-serif;
            }
            p {
                margin: 0;
            }
            caption {
            	text-align: left;
            }
            table {
            	border-collapse: collapse;
            	width: 100%;
            	page-break-inside: avoid;

            }
            td, th {
            	text-align:center; 
            }
            div.header {
				position: running(header);
            }
            div.header:after {
            	background: url('{!$Resource.Logo100}') no-repeat center center;
			    height: 100px;
			    width: 100px;
			    text-align: center;
			    position: absolute;
			    top: 30px;
			    right: 40px;
			    content: " ";
			    display: block;
            }

            tr.tableHeader th{
            	background-color: gray;
            	color: white;
            }
            tr.odd {
            	background-color: #ffffff;
            	z-index: 10;
            }
            tr.even {
            	background-color: #efefef;
            	z-index: 10;
            }
            tr.totals > td{
            	border-top: 1px solid black;
            	border-right: none;
            }
            td {
            	/*position: relative;
            	z-index: 10;*/
            	border-right: 1px solid black;
            	/*padding: 0px;
            	margin: 0px;*/
            }
            /*td:after{
			    content: " ";
			    width: 1px;
			    height: 100%;
			    position: absolute;
			    right: 0;
			    top: 0;
			    background-color: black;
			    display: block;
			    z-index: 999999;
            }*/
            td.lastCell{
				border-right: none;
            }
            td.alignRight {
            	text-align: right;
            }
            .grandTotalCapture{
            	background-color: transparent!important;
            	border-left:  0px solid black!important;
            	border-top: 0px solid black!important;
            	border-bottom:  0px solid black!important;
            	border-right: 1px solid black!important;
            	color: black!important;
            	text-align: right!important;
            }
            table.grandTotals tr .allBorders{
            	border:1px solid black;
            }
            .fixedWidth {
            	width:100px;
            }
            
            .allBorders{
            	border:1px solid black;
            }
        </style>
    </head>
    <body>
    	<div class="header"></div>

        <b>Revision No. {!numPdfs}</b><br/>
		<b>Offer Date: 
		<apex:outputtext value="{0, date, MMMM dd, yyyy}">
            <apex:param value="{!TODAY()}" />
        </apex:outputtext>
        </b>
		<br/>
		<br/>

		<div class="heading">COMMERCIAL OFFER</div><br/>

		<b>{!acc.Name}</b><br/>
		{!accountAddress}
		<br/>

        <apex:outputText value="Attention: {!quote.Contact.Name}"  rendered="{!IF(NOT(ISBLANK(quote.Contact.Name)), true, false)}"/>
        <br/>
        <apex:outputText value="Email: {!quote.Email}"  rendered="{!IF(NOT(ISBLANK(quote.Email)), true, false)}"/>
        <br/><br/>

		<b>Offer NO.: {!quote.QuoteNumber}</b><br/>
        <b>Enquiry Reference.: {!quote.Name}</b><br/>
		<br/>

		<apex:outputText escape="false" value="Dear {!sirName},<br/><br/><br/>
                We thankfully acknowledge the receipt of your enquiry &amp;
                we are pleased to submit our offer for the supply according to standard requirements with the attached details.<br/><br/>
                We hope you will find our offer complete and competitive. We look forward to receiving your response.<br/>
                Thanking and assuring you best of our services at all times.<br/>
                <br/><br/>Best Regards," /><br/>
        
        <div>
            <div style="display: inline-block; margin-right:20px;">
                <apex:outputText escape="false" value="{!curUser.Name}<br/>
                Sales Manager<br/>
                Phone: {!curUser.Phone}<br/>
                Email: {!userEmail}<br/>
                www.interpipe.biz"/>
            </div>
            <div style="{!IF (!ISBLANK(curUserSignature), 'display:inline-block', 'display:none')}">
            	<apex:image url="/sfc/servlet.shepherd/version/download/{!curUserSignature}" alt="{!curUserSignatureTitle}"
                        height="60px" rendered="{! !ISBLANK(curUserSignature)}"/>
        	</div>
        </div>
        
        <br/><br/><br/><br/><br/><br/>
		
		<apex:variable var="cnt" value="{!1}" />
		<apex:variable var="countTable" value="{!0}" />
		<apex:variable var="showNotForMT" value="{true}"/>
		<apex:variable var="labelToApiMap" value="{!apinameToLabelMap}"/>
		<apex:variable var="keyList" value="{!groupKeys}"/>
		<apex:variable value="{!0}" var="index" />
		<apex:variable value="{!testForRepeat}" var="testRepeat" />
		
		<!-- Iterate over groups of line items -->
		<apex:repeat var="tableI" value="{!listOpps}">
			<apex:variable var="show" value="{!tableI[0].Product2.Type__c=='Tube'}" />
            <apex:variable var="showLBFT" value="{!showLB_FTForTables[countTable]}" />
            <apex:variable var="showWT" value="{!showWTForTables[countTable]}" />
			<apex:variable var="showNotForMT" value="{!tableI[0].InquiryUnit__c!='34'}" />
			<div style="display:{!if(show,"","none")};" >

				<!-- Table for tubes -->
				<table cellpadding="0">	
					<caption>	
						<b>{!tableI[0].Product2.Type__c} in accordance with {!tableI[0].ProductStandard__r.Name} {!tableI[0].ProductSpecLevel__r.Name}<br/>
						Prices are offered on {!tableI[0].Quote.DeliveryTerms__r.Incoterms__c} {!tableI[0].ShippingPoint__r.Name} ({!tableI[0].ShippingPoint__r.Country__r.Name})</b>
					</caption>	
					<tr class="tableHeader">
						<th>Items</th>					
						<th>Product</th>
						<th>OD, inch</th>				
						<th style="display:{!if(showLBFT,"","none")};">lb/ft</th>	
		                <th>OD, mm</th>
		                <th style="display:{!if(showWT,"","none")};">WT, mm</th>				
		                <th>Steel Grade</th>			
		                <th>Ends</th>					
		                <th>Length, m</th>            
		                
		                
		                
                        <apex:repeat value="{!namesOfMeasureUnits}" var="ne">
                            <th>Quantity, {!ne}</th>					                	
                        </apex:repeat>
                        <th class="fixedWidth">Total price ({!quote.Opportunity.CurrencyISOCode})</th>
                        <apex:repeat value="{!namesOfMeasureUnits}" var="ne">
                            <th>Sales price per {!ne}</th>					                	
                        </apex:repeat>
		            </tr>
		        
		        	<!-- Iterate over rows -->
		        	<apex:variable var="localCounter" value="{!1}"/>
					<apex:repeat value="{!tableI}" var="line">
			            <tr class="{!if(mod(localCounter,2)==0, 'odd', 'even')}">
			            	<td><apex:OutputText value="{!cnt}"/></td>	
			            	<td style="text-align: left;">{!line.Product2.Name}</td>				
			              	<td>{!line.TubeOD__r.OD_inch__c}</td>		
			              	<td style="display:{!if(showLBFT,"","none")};">{!line.Weight_ppf__c}</td>				
			              	<td>{!line.TubeOD__r.OD_mm__c}</td>			
			              	<td style="display:{!if(showWT,"","none")};">{!line.TubeWT__r.WT_mm__c}</td>			
			              	<td>{!line.SteelGrade__r.ShortName__c}</td>	
			              	<td>{!line.TubeEnds__r.ShortName__c}</td>	
			              	<td>{!line.TubeLengthSize__r.ShortName__c}</td>
			              	        	
			              	
			              	<!--<apex:outputText value="{0, number, #, ###.000}"><apex:param value="{!line.Quantity}"/></apex:outputText>-->
			              	
			              	
                            <apex:repeat value="{!testForRepeat}" var="ne">
                            <td>{!oliIdToFormattedDataMap[line.Id][ne]}</td>					                	
                        	</apex:repeat>
                            <td class="lastCell alignRight fixedWidth">{!oliIdToFormattedDataMap[line.Id].TotalPrice}</td>
                            <apex:repeat value="{!selectedSalesPrice}" var="ne">
                            <td>{!line[ne]}</td>					                	
                        	</apex:repeat>
			            </tr>
			            <apex:variable var="cnt" value="{!if(show,cnt+1,cnt)}"/>
			            <apex:variable var="localCounter" value="{!localCounter+1}"/>       
			        </apex:repeat>

			        <!-- Calculate totals old form
		        	<tr class="totals">
                        <td colspan="{!if(showNotForMT,if(showLBFT,if(showWT,9,8),if(showWT,8,7)),if(showLBFT,if(showWT,8,7),if(showWT,7,6)))}" class="alignRight">TOTAL</td>
		        		<td class="alignRight">{!mapGroupsToMapAggregates[countTable].q}</td>
		        		<td style="display:{!if(showNotForMT,"","none")};" class="alignRight"><!--{!mapGroupsToMapAggregates[countTable].inqUnitPrice}</td>
		        		<td class="alignRight fixedWidth">{!mapGroupsToMapAggregates[countTable].totalPrice}</td>
                        <td class="alignRight fixedWidth">{!mapGroupsToMapAggregates[countTable].quantityM}</td>
		        	</tr> -->
                    <tr class="totals">
                        <td colspan="{!if(showNotForMT,if(showLBFT,if(showWT,8,8),if(showWT,8,8)),if(showLBFT,if(showWT,8,8),if(showWT,8,5)))}" class="alignRight">TOTAL</td>
                        		        				        				        		
                        <apex:repeat value="{!quantitySumNamesMap}" var="val">
                            <td class="alignRight">{!mapGroupsToMapAggregates[countTable][val]}</td>                           				                	
                        </apex:repeat>
                        <td class="alignRight fixedWidth">{!mapGroupsToMapAggregates[countTable].totalPrice}</td>
		        	</tr>
		        </table>

		        <br/><br/>
	        </div>

	        <div style="display:{!if(show,"none","")};" >
				
				<!-- Table for non-tubes -->
				<table>
					<caption>
						<b>{!tableI[0].Product2.Type__c} in accordance with {!tableI[0].ProductStandard__r.Name} {!tableI[0].ProductSpecLevel__r.Name}<br/>
						Prices are offered on {!tableI[0].Quote.DeliveryTerms__r.Incoterms__c} {!tableI[0].ShippingPoint__r.Name} ({!tableI[0].ShippingPoint__r.Country__r.Name})</b>
					</caption>
					<tr class="tableHeader">
						<th>Items</th>
						<th>Product</th>
						<th>OD, inch</th>
                        <th>OD, mm</th>
						<th style="display:{!if(showLBFT,"","none")};">lb/ft</th>
                        <th style="display:{!if(showWT,"","none")};">WT, mm</th>
		                <th>Steel Grade</th>
		                <th>Ends</th>
		                <th>Length, m</th>
		                
		                <th style="display:{!if(showNotForMT,"","none")};">Quantity</th>   
                        <th style="display:{!if(showNotForMT,"","none")};">Unit</th>             
		                <th>Quantity, MT</th>
		                <th style="display:{!if(showNotForMT,"","none")};" class="alignRight">Price ({!quote.Opportunity.CurrencyISOCode}/{!apinameToLabelMap[tableI[0].InquiryUnit__c]})</th>
		                <th class="alignRight">Price ({!quote.Opportunity.CurrencyISOCode}/Mt)</th>
		                <th class="alignRight fixedWidth">Total price ({!quote.Opportunity.CurrencyISOCode})</th>
                        <apex:repeat value="{!namesOfMeasureUnits}" var="ne">
                            <th>Quantity, {!ne}</th>					                	
                        </apex:repeat>
		            </tr>
		        
		        	<!-- Iterate over rows -->
		        	<apex:variable var="localCounter" value="{!1}"/>
					<apex:repeat value="{!tableI}" var="line">
			            <tr class="{!if(mod(localCounter,2)==0, 'odd', 'even')}">
			            	<td><apex:OutputText value="{!cnt}"/></td>
			            	<td style="text-align: left;">{!line.Product2.Name}</td>
			              	<td>{!line.TubeOD__r.OD_inch__c}</td>
                            <td>{!line.TubeOD__r.OD_mm__c}</td>
			              	<td style="display:{!if(showLBFT,"","none")};">{!line.Weight_ppf__c}</td>
                            <td style="display:{!if(showWT,"","none")};">{!line.TubeWT__r.WT_mm__c}</td>	
			              	<td>{!line.SteelGrade__r.ShortName__c}</td>
			              	<td>{!line.TubeEnds__r.ShortName__c}</td>
			              	<td>{!line.TubeLengthSize__r.ShortName__c}</td>
			              	
			              	<td style="display:{!if(showNotForMT,"","none")};" class="alignRight">{!oliIdToFormattedDataMap[line.Id].InquiryQuantity__c}</td> 
                            <td style="display:{!if(showNotForMT,"","none")};">{!apinameToLabelMap[line.InquiryUnit__c]}</td>             	
			              	<td class="alignRight">{!oliIdToFormattedDataMap[line.Id][$CurrentPage.parameters.Quantity]}</td>
			              	<td style="display:{!if(showNotForMT,"","none")};" class="alignRight">{!oliIdToFormattedDataMap[line.Id].InquiryUnitPrice__c}</td>
			              	<td class="alignRight">{!oliIdToFormattedDataMap[line.Id].UnitPrice}</td>
			              	<td class=" alignRight fixedWidth">{!oliIdToFormattedDataMap[line.Id].TotalPrice}</td>
                            <apex:repeat value="{!testForRepeat}" var="ne">
                            <td>{!oliIdToFormattedDataMap[line.Id][ne]}</td>					                	
                        	</apex:repeat>
			            </tr>
			            <apex:variable var="cnt" value="{!if(show,cnt,cnt+1)}"/>
			            <apex:variable var="localCounter" value="{!localCounter+1}"/>	       
			        </apex:repeat>

			        <!-- Calculate totals old form
		        	<tr class="totals">
                        <td colspan="{!if(showNotForMT,if(showLBFT,if(showWT,9,8),if(showWT,8,7)),if(showLBFT,if(showWT,8,7),if(showWT,7,6)))}" class="alignRight">TOTAL</td>
		        		<td class="alignRight">{!mapGroupsToMapAggregates[countTable].q}</td>
		        		<td style="display:{!if(showNotForMT,"","none")};" class="alignRight"><!--{!mapGroupsToMapAggregates[countTable].inqUnitPrice}</td>
		        		<td class="alignRight fixedWidth">{!mapGroupsToMapAggregates[countTable].totalPrice}</td>
		        	</tr>-->
                    
                    <tr class="totals">
                        <td colspan="{!if(showNotForMT,if(showLBFT,if(showWT,9,13),if(showWT,13,10)),if(showLBFT,if(showWT,13,10),if(showWT,10,6)))}" class="alignRight">TOTAL</td>
                        <td class="alignRight fixedWidth">{!mapGroupsToMapAggregates[countTable].totalPrice}</td>		        				        				        		
                        <apex:repeat value="{!quantitySumNamesMap}" var="val">
                            <td class="alignRight">{!mapGroupsToMapAggregates[countTable][val]}</td>
                           				                	
                        </apex:repeat>
		        	</tr>
		        </table>
		        <br/><br/>
	        </div>
			<apex:variable var="countTable" value="{!countTable+1}"/>
		</apex:repeat>
		
        <br/>
        
        <apex:pageBlock rendered="{!oliListAccessories.size>0}">           
        <table>
            <caption>
				<b>Accessories</b>
			</caption>
            <tr class="tableHeader">
            	<th>Name</th>
                <th>Price per Pcs</th>
                <th>Quantity Pcs</th>
                <th>Total Price</th>
            </tr>     
            	<apex:variable var="localCounter" value="{!1}"/>
            	<apex:repeat value="{!oliListAccessories}" var="item">               
            <tr class="{!if(mod(localCounter,2)==0, 'odd', 'even')}">    
                 <td class="allBorders fixedWidth">{!item.Product2.Name}</td>              
                 <td class="alignRight allBorders fixedWidth">{!item.InquiryUnitPrice__c}</td> 
                 <td class="alignRight allBorders fixedWidth">{!item.InquiryQuantity__c}</td>  
                 <td class="alignRight allBorders fixedWidth">{!item.TotalPrice}</td> 
            </tr> 
                <apex:variable var="localCounter" value="{!localCounter+1}"/>    
                </apex:repeat>           
            <tr class="totals">
                <td colspan="2"  class="alignRight">TOTAL</td>
                	<apex:repeat value="{!accessoriesSumMap}" var="item">
                        <td class="alignRight fixedWidth">{!accessoriesSumMap[item]}</td>
                    </apex:repeat>               
		    </tr>
        </table> 
             </apex:pageBlock>
        
        <br/>
        <br/>
        <apex:variable var="showNotForMTInTotal" value="{!listOpps[0][0].InquiryUnit__c!='34'}" />
        <table class="grandTotals">
        	<tr class="tableHeader">
        		<th rowspan="2" class="grandTotalCapture">GRAND TOTAL &nbsp;&nbsp;</th>      		
        		<!--<th class="allBorders fixedWidth">Quantity, {!metricName}</th>-->
        		
                <apex:repeat value="{!namesOfMeasureUnits}" var="ne">
                      <th class="allBorders">Quantity, {!ne}</th>					                	
                </apex:repeat>             
                <th style="display:{!if(oliListAccessories.size>0,"","none")};" class="alignRight allBorders">Quantity Accessories</th>  
                <th class="allBorders fixedWidth">Price, {!quote.Opportunity.CurrencyISOCode}</th>
        	</tr>
        	<tr>     
        		<!--<td class="alignRight allBorders fixedWidth">{!quantityMTSumAsString}</td> --> 
        		
                <apex:repeat value="{!testForRepeat}" var="ne">
                     <th class="allBorders">{!sumOfQuantityUnitsMap[ne]}</th>					                	
                </apex:repeat>
                <th style="display:{!if(oliListAccessories.size>0,"","none")};" class="alignRight allBorders">{!quantityAccessories}</th> 
                <td class="alignRight allBorders fixedWidth">{!totalPriceSumAsString}</td>
        	</tr>
        </table>
        <br/>
        <b>Manufacturing:</b>
        <ul Style="list-style-type:none">
            <li>-<b>  Country of origin:&nbsp;</b><apex:outputText escape="false" value="Ukraine" /></li>
            <li>-<b>  Manufacturer:&nbsp;</b><apex:outputText value="{!manufacturerAndOrigin} "/></li>
            <li>-<b>  Standards:&nbsp;</b><apex:outputText value="{!tolerance}" /></li>
        </ul>

        <apex:variable var="showdescription" value="{!quote.Description!=''}" />
        <div style="display:{!if(showdescription,"","none")};" >
        <b>Description: </b><br/>
        <apex:outputText escape="false" value="{!quote.Description}" /><br/><br/>
        </div>
        
        <b>Marking: </b><br/>
        <apex:outputText escape="false" value="{!quote.Marking__c}" /><br/>
        <b>Tolerance: </b><br/>
        <apex:outputText escape="false" value="{!quote.Tolerance__c}" /><br/>
        <b>Packing: </b><br/>
        <apex:outputText escape="false" value="{!quote.Packing__c}" /><br/>
        <b>Third party Inspection: </b><br/>
        <apex:outputText escape="false" value="{!quote.Third_Party_Inspection__c}" /><br/>
        <b>Invoicing: </b><br/>
        <apex:outputText escape="false" value="{!quote.Invoicing__c}" /><br/><br/> 
        <b>Delivery Terms: </b><br/>
        <apex:outputText escape="false" value="{!quote.DeliveryTerms__r.Name}" /><br/><br/>
        <b>Production/Delivery: </b><br/>
        <apex:outputText escape="false" value="{!quote.Production_Delivery__c}" /><br/><br/> 
        <b>Production/Delivery Details: </b><br/>
        <apex:outputText escape="false" value="{!productionDeliveryDetails}" /><br/><br/> 
        <b>Payment Terms: </b><br/>
        <apex:outputText escape="false" value="{!quote.PaymentTerms__r.NameFull__c}" /><br/><br/>   
        <b>Country of Origin: </b><br/>
        <apex:outputText escape="false" value="{!quote.Country_of_Origin__c}" /><br/><br/>
        <b>Special Shipping Requirements: </b><br/>
        <apex:outputText escape="false" value="{!quote.Special_Shipping_Requirements__c}" /><br/>
        <b>Shipping Marks: </b><br/>
        <apex:outputText escape="false" value="{!quote.ShippingMarks__c}" /><br/>
        <b>Validity Date: </b><br/>
        <apex:outputText escape="false" value="{!expirationDate}" /><br/><br/>
        <b>Additional Terms: </b><br/>
        <apex:outputText escape="false" value="{!quote.Additional_Terms__c}" /><br/> 
                     
        <apex:variable var="showBD" value="{!quote.Interpipe_Bank_Details__c!=''}" />
        <div style="display:{!if(showBD,"","none")};" >
        	<b>Bank Details: </b><br/>
        	<apex:outputText escape="false" value="{!quote.Interpipe_Bank_Details__c}" />
         	<br/><br/>
        </div>
        <apex:outputText escape="false" value="{!quote.BottomText__c}" /><br/>
        <!--<apex:outputText escape="false" value="{!ownerName}" /><br/>
        <apex:outputText escape="false" value="{!ownerPosition}" /><br/>
        <apex:outputText escape="false" value="{!metadataRecordName}" /><br/>-->

    </body>
</apex:page>